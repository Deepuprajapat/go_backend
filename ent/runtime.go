// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/VI-IM/im_backend_go/ent/blogs"
	"github.com/VI-IM/im_backend_go/ent/developer"
	"github.com/VI-IM/im_backend_go/ent/leads"
	"github.com/VI-IM/im_backend_go/ent/location"
	"github.com/VI-IM/im_backend_go/ent/project"
	"github.com/VI-IM/im_backend_go/ent/schema"
	"github.com/VI-IM/im_backend_go/ent/staticsitedata"
	"github.com/VI-IM/im_backend_go/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	blogsFields := schema.Blogs{}.Fields()
	_ = blogsFields
	// blogsDescIsPriority is the schema descriptor for is_priority field.
	blogsDescIsPriority := blogsFields[4].Descriptor()
	// blogs.DefaultIsPriority holds the default value on creation for the is_priority field.
	blogs.DefaultIsPriority = blogsDescIsPriority.Default.(bool)
	// blogsDescCreatedAt is the schema descriptor for created_at field.
	blogsDescCreatedAt := blogsFields[5].Descriptor()
	// blogs.DefaultCreatedAt holds the default value on creation for the created_at field.
	blogs.DefaultCreatedAt = blogsDescCreatedAt.Default.(time.Time)
	developerFields := schema.Developer{}.Fields()
	_ = developerFields
	// developerDescIsActive is the schema descriptor for is_active field.
	developerDescIsActive := developerFields[9].Descriptor()
	// developer.DefaultIsActive holds the default value on creation for the is_active field.
	developer.DefaultIsActive = developerDescIsActive.Default.(bool)
	// developerDescIsVerified is the schema descriptor for is_verified field.
	developerDescIsVerified := developerFields[10].Descriptor()
	// developer.DefaultIsVerified holds the default value on creation for the is_verified field.
	developer.DefaultIsVerified = developerDescIsVerified.Default.(bool)
	// developerDescCreatedAt is the schema descriptor for created_at field.
	developerDescCreatedAt := developerFields[12].Descriptor()
	// developer.DefaultCreatedAt holds the default value on creation for the created_at field.
	developer.DefaultCreatedAt = developerDescCreatedAt.Default.(time.Time)
	leadsFields := schema.Leads{}.Fields()
	_ = leadsFields
	// leadsDescEmail is the schema descriptor for email field.
	leadsDescEmail := leadsFields[1].Descriptor()
	// leads.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	leads.EmailValidator = leadsDescEmail.Validators[0].(func(string) error)
	// leadsDescName is the schema descriptor for name field.
	leadsDescName := leadsFields[3].Descriptor()
	// leads.NameValidator is a validator for the "name" field. It is called by the builders before save.
	leads.NameValidator = leadsDescName.Validators[0].(func(string) error)
	// leadsDescPhone is the schema descriptor for phone field.
	leadsDescPhone := leadsFields[5].Descriptor()
	// leads.PhoneValidator is a validator for the "phone" field. It is called by the builders before save.
	leads.PhoneValidator = leadsDescPhone.Validators[0].(func(string) error)
	// leadsDescCreatedAt is the schema descriptor for created_at field.
	leadsDescCreatedAt := leadsFields[10].Descriptor()
	// leads.DefaultCreatedAt holds the default value on creation for the created_at field.
	leads.DefaultCreatedAt = leadsDescCreatedAt.Default.(func() time.Time)
	// leadsDescUpdatedAt is the schema descriptor for updated_at field.
	leadsDescUpdatedAt := leadsFields[11].Descriptor()
	// leads.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	leads.DefaultUpdatedAt = leadsDescUpdatedAt.Default.(func() time.Time)
	// leads.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	leads.UpdateDefaultUpdatedAt = leadsDescUpdatedAt.UpdateDefault.(func() time.Time)
	locationFields := schema.Location{}.Fields()
	_ = locationFields
	// locationDescCountry is the schema descriptor for country field.
	locationDescCountry := locationFields[5].Descriptor()
	// location.DefaultCountry holds the default value on creation for the country field.
	location.DefaultCountry = locationDescCountry.Default.(string)
	// locationDescIsActive is the schema descriptor for is_active field.
	locationDescIsActive := locationFields[14].Descriptor()
	// location.DefaultIsActive holds the default value on creation for the is_active field.
	location.DefaultIsActive = locationDescIsActive.Default.(bool)
	// locationDescCreatedAt is the schema descriptor for created_at field.
	locationDescCreatedAt := locationFields[16].Descriptor()
	// location.DefaultCreatedAt holds the default value on creation for the created_at field.
	location.DefaultCreatedAt = locationDescCreatedAt.Default.(time.Time)
	projectFields := schema.Project{}.Fields()
	_ = projectFields
	// projectDescIsFeatured is the schema descriptor for is_featured field.
	projectDescIsFeatured := projectFields[5].Descriptor()
	// project.DefaultIsFeatured holds the default value on creation for the is_featured field.
	project.DefaultIsFeatured = projectDescIsFeatured.Default.(bool)
	// projectDescIsPremium is the schema descriptor for is_premium field.
	projectDescIsPremium := projectFields[6].Descriptor()
	// project.DefaultIsPremium holds the default value on creation for the is_premium field.
	project.DefaultIsPremium = projectDescIsPremium.Default.(bool)
	// projectDescIsPriority is the schema descriptor for is_priority field.
	projectDescIsPriority := projectFields[7].Descriptor()
	// project.DefaultIsPriority holds the default value on creation for the is_priority field.
	project.DefaultIsPriority = projectDescIsPriority.Default.(bool)
	// projectDescIsDeleted is the schema descriptor for is_deleted field.
	projectDescIsDeleted := projectFields[8].Descriptor()
	// project.DefaultIsDeleted holds the default value on creation for the is_deleted field.
	project.DefaultIsDeleted = projectDescIsDeleted.Default.(bool)
	// projectDescCreatedAt is the schema descriptor for created_at field.
	projectDescCreatedAt := projectFields[11].Descriptor()
	// project.DefaultCreatedAt holds the default value on creation for the created_at field.
	project.DefaultCreatedAt = projectDescCreatedAt.Default.(time.Time)
	staticsitedataFields := schema.StaticSiteData{}.Fields()
	_ = staticsitedataFields
	// staticsitedataDescCreatedAt is the schema descriptor for created_at field.
	staticsitedataDescCreatedAt := staticsitedataFields[7].Descriptor()
	// staticsitedata.DefaultCreatedAt holds the default value on creation for the created_at field.
	staticsitedata.DefaultCreatedAt = staticsitedataDescCreatedAt.Default.(func() time.Time)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescIsActive is the schema descriptor for is_active field.
	userDescIsActive := userFields[11].Descriptor()
	// user.DefaultIsActive holds the default value on creation for the is_active field.
	user.DefaultIsActive = userDescIsActive.Default.(bool)
	// userDescIsDeleted is the schema descriptor for is_deleted field.
	userDescIsDeleted := userFields[12].Descriptor()
	// user.DefaultIsDeleted holds the default value on creation for the is_deleted field.
	user.DefaultIsDeleted = userDescIsDeleted.Default.(bool)
	// userDescIsEmailVerified is the schema descriptor for is_email_verified field.
	userDescIsEmailVerified := userFields[13].Descriptor()
	// user.DefaultIsEmailVerified holds the default value on creation for the is_email_verified field.
	user.DefaultIsEmailVerified = userDescIsEmailVerified.Default.(bool)
	// userDescIsVerified is the schema descriptor for is_verified field.
	userDescIsVerified := userFields[14].Descriptor()
	// user.DefaultIsVerified holds the default value on creation for the is_verified field.
	user.DefaultIsVerified = userDescIsVerified.Default.(bool)
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[18].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(time.Time)
	// userDescUpdatedAt is the schema descriptor for updated_at field.
	userDescUpdatedAt := userFields[19].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(time.Time)
	// user.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	user.UpdateDefaultUpdatedAt = userDescUpdatedAt.UpdateDefault.(func() time.Time)
}
