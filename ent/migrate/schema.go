// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// BasesColumns holds the columns for the "bases" table.
	BasesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "deleted_at", Type: field.TypeBool, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// BasesTable holds the schema information for the "bases" table.
	BasesTable = &schema.Table{
		Name:       "bases",
		Columns:    BasesColumns,
		PrimaryKey: []*schema.Column{BasesColumns[0]},
	}
	// BlogsColumns holds the columns for the "blogs" table.
	BlogsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "seo_meta_info", Type: field.TypeJSON},
		{Name: "blog_url", Type: field.TypeString},
		{Name: "blog_content", Type: field.TypeJSON},
		{Name: "is_priority", Type: field.TypeBool, Default: false},
		{Name: "user_updated_blogs", Type: field.TypeInt, Nullable: true},
	}
	// BlogsTable holds the schema information for the "blogs" table.
	BlogsTable = &schema.Table{
		Name:       "blogs",
		Columns:    BlogsColumns,
		PrimaryKey: []*schema.Column{BlogsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "blogs_users_updated_blogs",
				Columns:    []*schema.Column{BlogsColumns[5]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// DevelopersColumns holds the columns for the "developers" table.
	DevelopersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "legal_name", Type: field.TypeString},
		{Name: "identifier", Type: field.TypeString},
		{Name: "established_year", Type: field.TypeInt},
		{Name: "media_content", Type: field.TypeJSON},
		{Name: "is_verified", Type: field.TypeBool, Default: false},
	}
	// DevelopersTable holds the schema information for the "developers" table.
	DevelopersTable = &schema.Table{
		Name:       "developers",
		Columns:    DevelopersColumns,
		PrimaryKey: []*schema.Column{DevelopersColumns[0]},
	}
	// LeadsColumns holds the columns for the "leads" table.
	LeadsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "email", Type: field.TypeString},
		{Name: "frequency", Type: field.TypeString, Nullable: true},
		{Name: "name", Type: field.TypeString},
		{Name: "otp", Type: field.TypeString, Nullable: true},
		{Name: "phone", Type: field.TypeString},
		{Name: "project_name", Type: field.TypeString, Nullable: true},
		{Name: "source", Type: field.TypeString, Nullable: true},
		{Name: "message", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "user_type", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "leads_property", Type: field.TypeInt},
		{Name: "property_leads", Type: field.TypeInt, Nullable: true},
	}
	// LeadsTable holds the schema information for the "leads" table.
	LeadsTable = &schema.Table{
		Name:       "leads",
		Columns:    LeadsColumns,
		PrimaryKey: []*schema.Column{LeadsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "leads_properties_property",
				Columns:    []*schema.Column{LeadsColumns[12]},
				RefColumns: []*schema.Column{PropertiesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "leads_properties_leads",
				Columns:    []*schema.Column{LeadsColumns[13]},
				RefColumns: []*schema.Column{PropertiesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// LocationsColumns holds the columns for the "locations" table.
	LocationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "locality_name", Type: field.TypeString},
		{Name: "city", Type: field.TypeString},
		{Name: "state", Type: field.TypeString},
		{Name: "phone_number", Type: field.TypeString},
		{Name: "country", Type: field.TypeString, Default: "India"},
		{Name: "pincode", Type: field.TypeString},
		{Name: "area_type", Type: field.TypeString},
		{Name: "is_active", Type: field.TypeBool, Default: true},
		{Name: "slug", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// LocationsTable holds the schema information for the "locations" table.
	LocationsTable = &schema.Table{
		Name:       "locations",
		Columns:    LocationsColumns,
		PrimaryKey: []*schema.Column{LocationsColumns[0]},
	}
	// ProjectsColumns holds the columns for the "projects" table.
	ProjectsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "basic_info", Type: field.TypeJSON},
		{Name: "timeline_info", Type: field.TypeJSON},
		{Name: "seo_meta_info", Type: field.TypeJSON},
		{Name: "web_cards", Type: field.TypeJSON},
		{Name: "location_info", Type: field.TypeJSON},
		{Name: "is_featured", Type: field.TypeBool, Default: false},
		{Name: "is_premium", Type: field.TypeBool, Default: false},
		{Name: "is_priority", Type: field.TypeBool, Default: false},
		{Name: "is_deleted", Type: field.TypeBool, Default: false},
		{Name: "search_context", Type: field.TypeJSON},
		{Name: "developer_projects", Type: field.TypeInt, Nullable: true},
		{Name: "location_projects", Type: field.TypeInt, Nullable: true},
	}
	// ProjectsTable holds the schema information for the "projects" table.
	ProjectsTable = &schema.Table{
		Name:       "projects",
		Columns:    ProjectsColumns,
		PrimaryKey: []*schema.Column{ProjectsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "projects_developers_projects",
				Columns:    []*schema.Column{ProjectsColumns[11]},
				RefColumns: []*schema.Column{DevelopersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "projects_locations_projects",
				Columns:    []*schema.Column{ProjectsColumns[12]},
				RefColumns: []*schema.Column{LocationsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// PropertiesColumns holds the columns for the "properties" table.
	PropertiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Size: 2147483647},
		{Name: "property_images", Type: field.TypeJSON},
		{Name: "web_cards", Type: field.TypeJSON},
		{Name: "basic_info", Type: field.TypeJSON},
		{Name: "location_details", Type: field.TypeJSON},
		{Name: "pricing_info", Type: field.TypeJSON},
		{Name: "property_rera_info", Type: field.TypeJSON},
		{Name: "search_context", Type: field.TypeJSON},
		{Name: "project_properties", Type: field.TypeInt, Nullable: true},
	}
	// PropertiesTable holds the schema information for the "properties" table.
	PropertiesTable = &schema.Table{
		Name:       "properties",
		Columns:    PropertiesColumns,
		PrimaryKey: []*schema.Column{PropertiesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "properties_projects_properties",
				Columns:    []*schema.Column{PropertiesColumns[10]},
				RefColumns: []*schema.Column{ProjectsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// StaticSiteDataColumns holds the columns for the "static_site_data" table.
	StaticSiteDataColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "about_us", Type: field.TypeJSON},
		{Name: "how_we_work", Type: field.TypeJSON},
		{Name: "testimonials", Type: field.TypeJSON},
		{Name: "mango_insights", Type: field.TypeJSON},
		{Name: "our_associations", Type: field.TypeJSON},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
	}
	// StaticSiteDataTable holds the schema information for the "static_site_data" table.
	StaticSiteDataTable = &schema.Table{
		Name:       "static_site_data",
		Columns:    StaticSiteDataColumns,
		PrimaryKey: []*schema.Column{StaticSiteDataColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "username", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "first_name", Type: field.TypeString},
		{Name: "last_name", Type: field.TypeString},
		{Name: "date_of_birth", Type: field.TypeTime, Nullable: true},
		{Name: "gender", Type: field.TypeString, Nullable: true},
		{Name: "phone_number", Type: field.TypeString, Nullable: true},
		{Name: "current_address", Type: field.TypeString, Nullable: true},
		{Name: "permanent_address", Type: field.TypeString, Nullable: true},
		{Name: "is_active", Type: field.TypeBool, Default: true},
		{Name: "is_deleted", Type: field.TypeBool, Default: false},
		{Name: "is_email_verified", Type: field.TypeBool, Default: false},
		{Name: "is_verified", Type: field.TypeBool, Default: false},
		{Name: "last_login_time", Type: field.TypeTime, Nullable: true},
		{Name: "parent_id", Type: field.TypeInt, Nullable: true},
		{Name: "photo_url", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeInt, Nullable: true},
		{Name: "updated_by", Type: field.TypeInt, Nullable: true},
		{Name: "user_created_users", Type: field.TypeInt, Nullable: true},
		{Name: "user_updated_users", Type: field.TypeInt, Nullable: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "users_users_created_users",
				Columns:    []*schema.Column{UsersColumns[22]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "users_users_updated_users",
				Columns:    []*schema.Column{UsersColumns[23]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		BasesTable,
		BlogsTable,
		DevelopersTable,
		LeadsTable,
		LocationsTable,
		ProjectsTable,
		PropertiesTable,
		StaticSiteDataTable,
		UsersTable,
	}
)

func init() {
	BlogsTable.ForeignKeys[0].RefTable = UsersTable
	LeadsTable.ForeignKeys[0].RefTable = PropertiesTable
	LeadsTable.ForeignKeys[1].RefTable = PropertiesTable
	ProjectsTable.ForeignKeys[0].RefTable = DevelopersTable
	ProjectsTable.ForeignKeys[1].RefTable = LocationsTable
	PropertiesTable.ForeignKeys[0].RefTable = ProjectsTable
	UsersTable.ForeignKeys[0].RefTable = UsersTable
	UsersTable.ForeignKeys[1].RefTable = UsersTable
}
